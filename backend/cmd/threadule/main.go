package main

import (
	"flag"
	"fmt"
	"threadule/backend/internal/app"
	"threadule/backend/internal/config"
	"threadule/backend/internal/data"
	"threadule/backend/internal/logic"
	router "threadule/backend/internal/router"
	"threadule/backend/internal/web"
)

var configFile = flag.String("c", "config.toml", "path to config file (will be autogenerated if it doesn't yet exist)")

func main() {
	flag.Parse()

	cfg, err := config.Read(*configFile)
	if err != nil {
		fmt.Println("reading config file failed")
		fmt.Println(err)
		return
	}

	ctx := &app.Context{
		Config: cfg,
	}

	ctx.Logic, err = logic.Setup(ctx)
	if err != nil {
		fmt.Println("couldn't setup logic layer")
		fmt.Println(err)
		return
	}

	ctx.Data, err = data.Setup(ctx)
	if err != nil {
		fmt.Println("couldn't setup persistence layer")
		fmt.Println(err)
		return
	}

	handler := router.Setup(ctx)
	err = web.StartServer(ctx, handler)
	if err != nil {
		fmt.Println("couldn't start web server")
		fmt.Println(err)
		return
	}
}
